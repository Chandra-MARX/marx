-*- text -*-

MARX Installation Notes.  For details, see
<http://space.mit.edu/cxc/marx/install.html>.

Before building marx, you need to decide where you want to install it.
A good choice for a multi-user system is under /usr/local/.  If you
want to install it for personal use, something like $HOME/marx/ might
be more appropriate.  For the purposes of this document, assume that
it is to be installed under /usr/local/.  Start by running the
configure script as follows:

   # ./configure --prefix=/usr/local

If you intend to build marxrsp (see below for details), then add the
location of where libcfitsio is located to the configure line, e.g.,

   # ./configure --prefix=/usr/local --with-cfitsio=/opt

   This form assumes that libcfitsio and fitsio.h are in the lib/ and
   include/ subdirectories of a common root directory (/opt in this
   example.  If this is not the case, then you will have to use the
   --with-cfitsiolib and --with-cfitsioinc options, as indicated by
   running `./configure --help | grep cfitsio`:

     --with-cfitsio=DIR      Use DIR/lib and DIR/include for cfitsio
     --with-cfitsiolib=DIR   cfitsio library in DIR
     --with-cfitsioinc=DIR   cfitsio include files in DIR

   NOTE: If you used "--with-cfitsio=$HEADAS" to link to the version
   of CFITSIO distributed with HEASOFT, then see the important note
   below in the MARXRSP section of this document.

The configure step may take a few minutes to complete, depending upon
the speed of your system.  This script probes your system to see what
tools and libraries are available, and then creates the necessary
makefiles.  If all went well, you will see something like:

   MARX executables will be installed in /usr/local/bin/.
   MARX documentation will be installed in /usr/local/share/doc/marx/.
   MARX data files will be installed in /usr/local/share/marx/data/.
   MARX parameter files will be installed in /usr/local/share/marx/pfiles/.

   To continue the build process, run `make`.

The next step in the build process is to run the `make` program:

   # make

This will build the marx executables and needed libraries but will not
install them.  Assuming a successful build, run `make install` to
perform the installation:

   # make install

NOTE: This step may require root privileges if you do not have write
permission to create files under the selected installation directory.
So, you may have to perform the install script using something like

   # sudo make install

===========================================================================
MARXRSP
===========================================================================
Note: You do not need marxrsp to run marx.  This program is optional!!

To build marxrsp, you first need to get the CFITSIO library if you do
not already have it.  It is not included in this distribution because
you probably already have it if you have ftools.  In any case, after
locating your CFITSIO distribution, or building and installing
CFITSIO, and running configure as described above, then do:

   make marxrsp
   make install

If marxrsp failed to build, then most likely you do not have CFITSIO
properly installed, or you specified the wrong CFITSIO location when
you configured marx.

Note to HEASOFT users:

  If you tried to compile against the version of CFITSIO distributed
  with HEASOFT, you should be aware that the CFITSIO library
  distributed with it has been renamed to include the version number
  in the name of the library.  The reason for this is that shared
  versions of the CFITSIO library are generally not backward binary
  compatible with one another.  In this case, you will need to edit
  marxrsp/Makefile and explicitly add the version number.  For
  example, if you used

     --with-cfitsio=$HEADAS

  then look in the $HEADAS directory to see what libcfitsio is called.
  Let's assume that you see something like libcfitsio_3.27.dylib in
  the $HEADAS directory.  Then in marxrsp/Makefile change "-lcfitsio" to
  "-lcfitsio_3.27".  Keep in mind that after doing this, marxrsp will be
  tied to this particular version of the CFITSIO library, and you will
  not be able to update HEASOFT without breaking marxrsp.  For this
  reason, it is recommended that you download CFITSIO from
  http://heasarc.nasa.gov/ and install it separately.

====================================================================
PROBLEMS
====================================================================

NeXT Problems
-------------
For some reason, rfl refuses to compile under NeXT.  I think it is
a bug in the linker on this system.  If you run into a problem, edit
marx/Makefile to skip building rfl.

Ultrix Problems
---------------
Ultrix cc has a bug in the optimizer causing it to generate bad
assembly code, which the assembler (as) trips over and coredumps.  On
this system, it is recommended that before configuring, set the CFLAGS
environment variable to -g.  That is, do:

   # setenv CFLAGS -g
   # ./configure

Solaris
-------
There appears to be a bug in the libc function `qsort'.  We have not
actually experienced any problems with the bug but `purify' does report an
``uninitialized memory read'' in the qsort function.  This is __NOT__ a
result of a bug in MARX.  If you do experience a coredump of MARX and
the dump occurs while the qsort function is executing, let me know and
I will supply a custom bug-free version of qsort in the next MARX release.


John E. Davis
davis@space.mit.edu
